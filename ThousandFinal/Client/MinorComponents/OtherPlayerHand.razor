<div ondragover="event.preventDefault();"
     ondragstart="event.dataTransfer.setData('', event.target.id);"
     @ondrop="HandleDrop" @ondragenter="HandleEnter" @ondragleave="HandleLeave" class="@dropClass otherPlayerHand">
    <p>@UserName</p>
    <p>@numberOfCards cards</p>
</div>

@code {
    [CascadingParameter] public Game Game { get; set; }
    [Parameter] public string UserName { get; set; }
    [Parameter] public int numberOfCards { get; set; }

    string dropClass { get; set; } = "";

    private async Task HandleDrop()
    {
        //Client side validation
        if(numberOfCards > 7)
            return;

        dropClass = "";

        Console.WriteLine($"Drop to: {UserName}");
        await Game.GiveCard(UserName);
    }

    private async Task HandleEnter()
    {
        if(Game.AmIActive() && Game.phase == Phase.GivingAdditionalCards && numberOfCards < 8)
            dropClass = "can-drop";
        else
            dropClass = "no-drop";
    }

    private async Task HandleLeave()
    {
        dropClass = "";
    }
 }
