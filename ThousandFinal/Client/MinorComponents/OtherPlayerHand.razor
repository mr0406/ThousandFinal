<div class="playerName">@UserName</div>

<div ondragover="event.preventDefault();"
     ondragstart="event.dataTransfer.setData('', event.target.id);"
     @ondrop="HandleDrop" @ondragenter="HandleEnter" @ondragleave="HandleLeave" class="@dropClass otherPlayerHand">

    @for (int i = 0; i < @numberOfCards; i++)
    {
        <div id="cardContainer">

            <div class="cardColorContainer">

                <div class="cardColorText"></div>

                <img class="smallCardColorImage" />

            </div>

            <img class="bigCardColorImage" />

            <div class="cardColorContainer">

                <img class="smallCardColorImage" />

                <div class="cardColorText"></div>

            </div>
        </div>
    }
</div>

@code {
    [CascadingParameter] public Game Game { get; set; }
    [Parameter] public string UserName { get; set; }
    [Parameter] public int numberOfCards { get; set; }

    string dropClass { get; set; } = "";

    private async Task HandleDrop()
    {
        if (numberOfCards > 7)
            return;

        dropClass = "";

        await Game.GiveCard(UserName);
    }

    private async Task HandleEnter()
    {
        if (Game.AmIActive() && Game.phase == Phase.GivingAdditionalCards && numberOfCards < 8)
        {
            dropClass = "can-drop";
        }
        else
        {
            dropClass = "no-drop";
        }
    }

    private async Task HandleLeave()
    {
        dropClass = "";
    }
}
