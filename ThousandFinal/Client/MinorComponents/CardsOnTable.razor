<div ondragover="event.preventDefault();"
     ondragstart="event.dataTransfer.setData('', event.target.id);"
     @ondrop="HandleDrop" @ondragenter="HandleEnter" @ondragleave="HandleLeave" class="@dropClass" style="min-width: 40%;
    min-height: 200px;
    border: groove;
    display: flex;">
    <!--Nie działa klasa: cardsOnTable z app.css, dlatego wrzucone lokalnie tutaj-->
    @if (Cards != null)
    {
        @foreach (var card in Cards)
        {
            <Card CardModel="card"></Card>
        }
    }
</div>

@code {
    [CascadingParameter] public Game Game { get; set; }
    [Parameter] public List<CardModel> Cards { get; set; }

    string dropClass { get; set; } = "";

    private async Task HandleDrop()
    {
        if(dropClass != "can-drop")
        {
            dropClass = "";
            return;
        }

        dropClass = "";
        Console.WriteLine("Drop");
        await Game.PlayCard();
    }

    private async Task HandleEnter()
    {
        if(Game.phase != Phase.Playing)
        {
            dropClass = "no-drop";
            return;
        }

        if(!Game.AmIActive())
        {
            dropClass = "no-drop";
            return;
        }

        if (CanPlayThisCard())
        {
            dropClass = "can-drop";
        }
        else
        {
            dropClass = "no-drop";
        }

    }

    private async Task HandleLeave()
    {
        dropClass = "";
    }

    public bool CanPlayThisCard()
    {
        return Game.CanPlayThisCard();
    }
}
