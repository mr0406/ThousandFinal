@page "/"
@inject NavigationManager  NavigationManager

<CascadingValue Value="this.hubConnection">
    <div style="border: dotted">
        @if (!joined)
        {
            <Login></Login>
        }
        else
        {
            <div class="row">
                <div class="col-9">
                    <Game User="User" Users="Users"></Game>
                </div>
                <div class="col-3">
                    <Chat User="User" Users="Users"></Chat>
                </div>
            </div>
        }
    </div>
</CascadingValue>


@code {
    Game Game;

    public HubConnection hubConnection;

    public bool joined = false;

    public List<UserModel> Users = new List<UserModel>();
    public UserModel User;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/apphub"))
            .Build();

        hubConnection.On<List<UserModel>>(ServerToClient.RECEIVE_USERS, (List<UserModel> users) =>
        {
            this.Users = users;
            StateHasChanged();
        });

        hubConnection.On(ServerToClient.RECEIVE_JOIN, (UserModel user) =>
        {
            joined = true;
            User = user;
            StateHasChanged();
            hubConnection.SendAsync(ClientToServer.GET_USERS);
        });

        hubConnection.On(ServerToClient.RECEIVE_OTHER_USER_JOIN, (UserModel user) =>
        {
            Users.Add(user);
            StateHasChanged();
        });

        hubConnection.On<UserModel>(ServerToClient.RECEIVE_OTHER_USER_LEAVE, (user) =>
        {
            hubConnection.SendAsync(ClientToServer.GET_USERS);
        //var encodedMsg = $"{user.Name} left server.";
        //messages.Add(encodedMsg);
        StateHasChanged();
        });


        await hubConnection.StartAsync();
    }
}
